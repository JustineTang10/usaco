/*
ID: jujumoh1
LANG: C
TASK: sprime
*/

#include <stdio.h>
#include <stdlib.h>
#include <math.h>

static int ribs[8][20];
int rib_count[8] = {4, 0, 0, 0, 0, 0, 0, 0};

void find_ribs(int count, int limit) {
  int current_number, i, j, k;
  for (i = 0; i < rib_count[count - 1]; i++) {
    for (j = 1; j <= 9; j += 2) {
      current_number = ribs[count - 1][i] * 10 + j;
      for (k = 3; k < floor(sqrt((double) current_number)) + 1; 
            k++) {
        if (current_number % k == 0)
          break;
      }
      if (k == floor(sqrt((double) current_number)) + 1) {
        ribs[count][rib_count[count]] = current_number;
        rib_count[count]++;
      }
    }
  }
  if (count == limit)
    return;
  find_ribs(count + 1, limit);
}

int main(void) {
  FILE *fin = fopen("sprime.in", "r");
  FILE *fout = fopen("sprime.out", "w");
  int n;
  ribs[0][0] = 2;
  ribs[0][1] = 3;
  ribs[0][2] = 5;
  ribs[0][3] = 7;
  fscanf(fin, "%d", &n);
  if (n > 1)
    find_ribs(1, n - 1);
  for (int i = 0; i < rib_count[n - 1]; i++)
    fprintf(fout, "%d\n", ribs[n - 1][i]);
  return 0;
}