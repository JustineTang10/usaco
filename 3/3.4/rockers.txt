/*
ID: jujumoh1
LANG: C
TASK: rockers
*/

#include <stdio.h>
#include <stdlib.h>

#define MAX_SONGS 20
#define MAX_DISKS 20
#define MAX_MINUTES 20

static int memo[MAX_SONGS][MAX_DISKS][MAX_MINUTES + 1];
int songs[MAX_SONGS], n, t, m;

int max(int a, int b) {
  if (a > b)
    return a;
  return b;
}

int solve(int index, int disk_num, int num_minutes) {
  if (disk_num == m)
    return -1;
  if (index == n)
    return 0;
  if (memo[index][disk_num][num_minutes] != -1)
    return memo[index][disk_num][num_minutes];
  int best = 0, i, current;
  for (i = index; i < n; i++) {
    if (songs[i] <= num_minutes)
      best = max(best, solve(i + 1, disk_num, 
                            num_minutes - songs[i]) + 1);
    else
      best = max(best, solve(i, disk_num + 1, t));
  }
  memo[index][disk_num][num_minutes] = best;
  return best;
}

int main(void) {
  FILE *fin = fopen("rockers.in", "r");
  FILE *fout = fopen("rockers.out", "w");
  fscanf(fin, "%d%d%d", &n, &t, &m);
  int i, j, k;
  for (i = 0; i < n; i++) {
    fscanf(fin, "%d", &songs[i]);
    for (j = 0; j < m; j++)
      for (k = 0; k <= t; k++)
        memo[i][j][k] = -1;
  }
  fprintf(fout, "%d\n", solve(0, 0, t));
  return 0;
}